#!/bin/sh

set -e

\. ../utils/colors.sh
\. ../directories.sh
\. ../versions.sh

install_kitty() {
  if [ $# -eq 0 ]; then
    echo "No arguments were passed to the kitty installation function" >&2
    exit 1
  fi
  if [ -z "$1" ]; then
    echo "No version argument was passed to the kitty installation function" >&2
    exit 1
  fi
  echo "Starting the installation of kitty version $1"
  echo "Running kitty installation"
  curl -L 'https://sw.kovidgoyal.net/kitty/installer.sh' | sh /dev/stdin launch=n installer="version-${wanted_ver}"
  echo "kitty installed"
}

if [ "${HAS_CONNECTION}" = "true" ]; then
  minor_ver="$(echo "${KITTY_VERSION}" | head -c "$(echo "${KITTY_VERSION}" | grep -m 2 -ob "\." | tail -1 | grep -oE "[0-9]+")")"
  wanted_ver="$(gh api -X 'GET' '/repos/kovidgoyal/kitty/releases' \
    -H 'Accept: application/vnd.github+json' \
    -H 'X-GitHub-Api-Version: 2022-11-28' \
    | jq -r '.[] | .tag_name' | grep "${minor_ver}" | sort -V | tail -1 \
    | cut -c 2-)"
  current_ver=""
  if command -v kitty >/dev/null 2>&1; then
    current_ver="$(kitty --version | cut -c $(($(kitty --version | grep -ob "\ " | head -1 | grep -oE "[0-9]+") + 2))-"$(kitty --version | grep -ob "\ " | head -2 | tail -1 | grep -oE "[0-9]+")")"
    echo "Set ${current_ver} as the current kitty version"
  fi

  echo "Found the following kitty versions:"
  echo "Current version: ${current_ver}"
  echo "Wanted version: ${wanted_ver}"

  if ! command -v kitty >/dev/null 2>&1; then
    install_kitty "${wanted_ver}"
  elif [ "${wanted_ver}" != "${current_ver}" ]; then
    if [ "${DISABLE_UPDATES}" != "true" ]; then
      install_kitty "${wanted_ver}"
    else
      printf "%bkitty update available! Current version: %s, available version: %s%b\n" "${ESC_YELLOW}" "${current_ver}" "${wanted_ver}" "${ESC_RESET}"
    fi
  fi
fi

echo "Setting up the kitty configuration"

readonly config_dir="${XDG_CONFIG_HOME}/kitty"
readonly config_file="${config_dir}/kitty.conf"
readonly config_line="include user.conf"

echo "The kitty configuration file is ${config_file}"

if [ ! -d "${config_dir}" ]; then
  mkdir -p "${config_dir}"
fi

if ! grep -xF "${config_line}" "${config_file}" >/dev/null 2>&1; then
  echo "The line '${config_line}' was not found in the kitty configuration file"
  echo "${config_line}" >>"${config_file}"
fi

echo "kitty configuration set up"

if [ "${OS_NAME}" = "darwin" ]; then
  echo "Creating links on macOS to the kitty binaries"
  ln -sf /Applications/kitty.app/Contents/MacOS/kitty /Applications/kitty.app/Contents/MacOS/kitten "${LOCAL_BIN_DIR}/"
  echo "Links created"
fi
