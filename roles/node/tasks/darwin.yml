---
- name: Ensure that the nvm directory exists
  ansible.builtin.file:
    path: "{{ node_nvm_dir }}"
    state: directory
    mode: "0755"

- name: Copy the configuration for default global packages
  ansible.builtin.copy:
    src: default-packages
    dest: "{{ node_nvm_dir }}/default-packages"
    mode: "0644"
    force: true

- name: Get the nvm version
  ansible.builtin.shell:
    cmd: |
      source {{ node_nvm_dir }}/nvm.sh
      nvm --version --no-colors
  register: current_nvm_version_sh
  changed_when: false
  failed_when: false

- name: Set the current nvm version fact
  ansible.builtin.set_fact:
    current_nvm_version: "v{{ current_nvm_version_sh.stdout | default('') }}"

- name: Query the latest nvm version
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      echo $(curl -LsS https://api.github.com/repos/nvm-sh/nvm/releases/latest | jq -r '.tag_name')
  register: latest_nvm_version_sh
  changed_when: false

- name: Set the latest nvm version fact
  ansible.builtin.set_fact:
    latest_nvm_version: "{{ latest_nvm_version_sh.stdout | default('') }}"

- name: Install nvm
  ansible.builtin.shell: |
    set -o pipefail
    curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/{{ latest_nvm_version }}/install.sh | bash
  environment:
    NVM_DIR: "{{ node_nvm_dir }}"
    PROFILE: /dev/null
  args:
    creates: "{{ node_nvm_dir }}/nvm.sh"
  when: latest_nvm_version not in current_nvm_version
  changed_when: latest_nvm_version not in current_nvm_version

- name: Install Node.js versions
  ansible.builtin.include_tasks: darwin_install_node.yml
  loop: "{{ node_versions }}"

- name: Set the default Node.js version
  ansible.builtin.shell:
    cmd: |
      source {{ node_nvm_dir }}/nvm.sh
      nvm alias default {{ node_default_version }} --no-colors
  changed_when: true
  environment:
    NVM_DIR: "{{ node_nvm_dir }}"
# vi: ft=yaml.ansible
