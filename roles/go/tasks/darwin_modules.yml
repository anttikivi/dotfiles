---
- name: Debug the required Hugo version
  ansible.builtin.debug:
    var: go.hugo.version

- name: Resolve the required Hugo minor version
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      echo "{{ go.hugo.version }}" | head -c $(echo "{{ go.hugo.version }}" | grep -m 2 -ob "\." | tail -1 | grep -oE "[0-9]+")
  register: required_hugo_minor_sh
  changed_when: false
  failed_when: false

- name: Set the required Hugo minor version fact
  ansible.builtin.set_fact:
    required_hugo_minor_version:
      "{{ required_hugo_minor_sh.stdout | default('') }}"

- name: Debug the required Hugo minor version fact
  ansible.builtin.debug:
    var: required_hugo_minor_version

- name: Get the Hugo version
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      hugo_version=$(hugo version)
      v_index=$(echo ${hugo_version} | grep -ob "v" | grep -oE "[0-9]+")
      plus_index=$(echo ${hugo_version} | grep -ob "+" | grep -oE "[0-9]+")
      echo ${hugo_version} | cut -c $((${v_index} + 1))-${plus_index}
  register: current_hugo_version_sh
  changed_when: false
  failed_when: false

- name: Set the current Hugo version fact
  ansible.builtin.set_fact:
    current_hugo_version: "{{ current_hugo_version_sh.stdout | default('') }}"

- name: Debug the current Hugo version fact
  ansible.builtin.debug:
    var: current_hugo_version

- name: Resolve the wanted Hugo version
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      curl -LsS https://api.github.com/repos/gohugoio/hugo/releases?per_page=75 | jq -r '.[] | .name' | grep "{{ required_hugo_minor_version | replace('.', '\\.') }}" | sort -V | tail -1
  register: wanted_hugo_version_sh
  changed_when: false
  failed_when: wanted_hugo_version_sh.rc != 0

- name: Set the wanted Hugo version fact
  ansible.builtin.set_fact:
    wanted_hugo_version: "{{ wanted_hugo_version_sh.stdout | default('') }}"

- name: Debug the wanted Hugo version fact
  ansible.builtin.debug:
    var: wanted_hugo_version

- name: Remove existing Hugo installation
  ansible.builtin.file:
    path: "{{ ansible_user_dir }}/go/bin/hugo"
    state: absent
  when: wanted_hugo_version != current_hugo_version

- name: Install Hugo
  ansible.builtin.command:
    cmd:
      "go install -tags extended github.com/gohugoio/hugo@{{ wanted_hugo_version
      }}"
    creates: "{{ ansible_user_dir }}/go/bin/hugo"
  environment:
    CGO_ENABLED: "1"
    GOPATH: "{{ ansible_user_dir }}/go"
  register: hugo_install
  when: wanted_hugo_version != current_hugo_version
  changed_when: hugo_install.rc != 0
# vi: ft=yaml.ansible
