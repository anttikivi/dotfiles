---
- name: Set the kitty directory facts on macOS
  ansible.builtin.set_fact:
    kitty_bin_dir: /Applications/kitty.app/Contents/MacOS
    kitty_color_script: "{{ local_bin_dir }}/kitty_change_colors"
    kitty_color_service_label: fi.anttikivi.kittycolors
    kitty_color_service_stdout: "{{ local_dir }}/var/log/kitty_colors.log"
    kitty_color_service_stderr: "{{ local_dir }}/var/log/kitty_colors.err"
    kitty_config_dir: "{{ xdg_config_home }}/kitty"
    kitty_creates_dir: /Applications/kitty.app
    kitty_watch_script: "{{ local_bin_dir }}/kitty_watch_colors"
  when: macos

- name: Set the kitty directory facts on Debian
  ansible.builtin.set_fact:
    kitty_bin_dir: "{{ local_dir }}/kitty.app/bin"
    kitty_config_dir: "{{ xdg_config_home }}/kitty"
    kitty_creates_dir: "{{ local_dir }}/kitty.app"
  when: debian

- name: Link the kitty configuration
  ansible.builtin.file:
    src: "{{ dotfiles_dir }}/kitty"
    dest: "{{ kitty_config_dir }}"
    state: link
    force: true

- name: Debug the required kitty version
  ansible.builtin.debug:
    var: kitty_version

- name: Resolve the required kitty minor version
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      echo "{{ kitty_version }}" | head -c $(echo "{{ kitty_version }}" | grep -m 2 -ob "\." | tail -1 | grep -oE "[0-9]+")
  register: kitty_required_minor_sh
  changed_when: false
  failed_when: false

- name: Set the required kitty minor version fact
  ansible.builtin.set_fact:
    kitty_required_minor_version:
      "{{ kitty_required_minor_sh.stdout | default('') }}"

- name: Debug the required kitty minor version fact
  ansible.builtin.debug:
    var: kitty_required_minor_version

- name: Resolve the wanted kitty version
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      curl -LsSH "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repos/kovidgoyal/kitty/releases | jq -r '.[] | .tag_name' | grep "{{ kitty_required_minor_version | replace('.', '\\.') }}" | sort -V | tail -1
  register: kitty_wanted_version_sh
  changed_when: false
  failed_when: kitty_wanted_version_sh.rc != 0

- name: Set the wanted kitty version fact
  ansible.builtin.set_fact:
    kitty_wanted_version: "{{ kitty_wanted_version_sh.stdout | default('') }}"

- name: Debug the wanted kitty version fact
  ansible.builtin.debug:
    var: kitty_wanted_version

- name: Stat kitty
  ansible.builtin.stat:
    path: "{{ kitty_bin_dir }}/kitty"
  register: kitty_stat

- name: Get the kitty version
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      {{ kitty_bin_dir }}/kitty --version | cut -c $(($({{ kitty_bin_dir }}/kitty --version | grep -ob "\ " | head -1 | grep -oE "[0-9]+") + 2))-$({{ kitty_bin_dir }}/kitty --version | grep -ob "\ " | head -2 | tail -1 | grep -oE "[0-9]+")
  when: kitty_stat.stat.exists
  register: kitty_current_version_sh
  changed_when: false
  failed_when: kitty_current_version_sh.rc != 0

- name: Set the current kitty version fact
  ansible.builtin.set_fact:
    kitty_current_version:
      "v{{ kitty_current_version_sh.stdout | default('') }}"

- name: Debug the current kitty version fact
  ansible.builtin.debug:
    var: kitty_current_version

- name: Remove the old kitty installation
  ansible.builtin.file:
    path: "{{ kitty_creates_dir }}"
    state: absent
  when: kitty_wanted_version != kitty_current_version

- name: Install kitty
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      curl -L https://sw.kovidgoyal.net/kitty/installer.sh | sh /dev/stdin launch=n
    creates: "{{ kitty_creates_dir }}"

- name: Copy the script for changing kitty's color scheme
  ansible.builtin.template:
    src: kitty_change_colors.j2
    dest: "{{ kitty_color_script }}"
    mode: "755"
  when: macos

- name: Copy the script for watching the system color scheme for kitty
  ansible.builtin.template:
    src: kitty_watch_colors.j2
    dest: "{{ kitty_watch_script }}"
    mode: "755"
  when: macos

- name: Copy the service for watching for the color scheme changes for kitty
  ansible.builtin.template:
    src: kittycolors.plist.j2
    dest:
      "{{ ansible_user_dir }}/Library/LaunchAgents/{{ kitty_color_service_label
      }}.plist"
    mode: "644"
  when: macos

- name: Reload the service for watching color scheme changes for kitty
  ansible.builtin.shell:
    cmd: |
      launchctl unload -w "{{ ansible_user_dir }}/Library/LaunchAgents/{{ kitty_color_service_label }}.plist"
      launchctl load -w "{{ ansible_user_dir }}/Library/LaunchAgents/{{ kitty_color_service_label }}.plist"
  changed_when: true
  when: macos
  # when: kitty_colors_launchd_list.rc == 0
# vi: ft=yaml.ansible
