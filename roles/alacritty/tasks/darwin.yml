---
- name: Debug the required Alacritty version
  ansible.builtin.debug:
    var: alacritty.version

- name: Resolve the required Alacritty minor version
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      echo "{{ alacritty.version }}" | head -c $(echo "{{ alacritty.version }}" | grep -m 2 -ob "\." | tail -1 | grep -oE "[0-9]+")
  register: required_alacritty_minor_sh
  changed_when: false
  failed_when: false

- name: Set the required Alacritty minor version fact
  ansible.builtin.set_fact:
    required_alacritty_minor_version:
      "{{ required_alacritty_minor_sh.stdout | default('') }}"

- name: Debug the required Alacritty minor version fact
  ansible.builtin.debug:
    var: required_alacritty_minor_version

- name: Resolve the wanted Alacritty version
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      curl -LsS https://api.github.com/repos/alacritty/alacritty/releases?per_page=30 | jq -r '.[] | .tag_name' | grep "{{ required_alacritty_minor_version | replace('.', '\\.') }}" | grep -v "\\-rc" | sort -V | tail -1
  register: wanted_alacritty_version_sh
  changed_when: false
  failed_when: wanted_alacritty_version_sh.rc != 0

- name: Set the wanted Alacritty version fact
  ansible.builtin.set_fact:
    wanted_alacritty_version:
      "{{ wanted_alacritty_version_sh.stdout | default('') }}"

- name: Debug the wanted Alacritty version fact
  ansible.builtin.debug:
    var: wanted_alacritty_version

- name: Get the Alacritty version
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      # TODO: The lengths shouldn't be hard-coded.
      alacritty --version | head --lines 1 | cut -c 11-16
  register: current_alacritty_version_sh
  changed_when: false
  failed_when: false

- name: Set the current Alacritty version fact
  ansible.builtin.set_fact:
    current_alacritty_version:
      "v{{ current_alacritty_version_sh.stdout | default('') }}"

- name: Debug the current Alacritty version
  ansible.builtin.debug:
    var: current_alacritty_version

- name: Install Alacritty
  when: wanted_alacritty_version != current_alacritty_version
  notify:
    - Clean up the temporary Alacritty directory
  block:
    - name: Remove previous Alacritty installation
      ansible.builtin.file:
        path: /Applications/Alacritty.app
        state: absent

    - name: Create a temporary directory for Alacritty
      ansible.builtin.tempfile:
        state: directory
      register: tmp_alacritty

    - name: Set the temporary Alacritty directory fact
      ansible.builtin.set_fact:
        tmp_alacritty_dir: "{{ tmp_alacritty.path }}"

    - name: Set the cloned Alacritty directory fact
      ansible.builtin.set_fact:
        alacritty_dir: "{{ tmp_alacritty_dir }}/alacritty"

    - name: Clone Alacritty
      ansible.builtin.git:
        dest: "{{ alacritty_dir }}"
        repo: https://github.com/alacritty/alacritty.git
        depth: 1
        version: "{{ wanted_alacritty_version }}"

    - name: Build Alacritty
      community.general.make:
        chdir: "{{ alacritty_dir }}"
        target: app

    - name: Copy Alacritty.app to Applications
      ansible.builtin.copy:
        src: "{{ alacritty_dir }}/target/release/osx/Alacritty.app"
        dest: /Applications
        mode: preserve

    - name: Set up Alacritty's `terminfo`
      ansible.builtin.command:
        cmd: tic -xe alacritty,alacritty-direct extra/alacritty.info
        chdir: "{{ alacritty_dir }}"
      become: true
      changed_when: true

    - name: Ensure that the `man1` directory exists
      ansible.builtin.file:
        path: /usr/local/share/man/man1
        state: directory
        mode: "755"

    - name: Ensure that the `man5` directory exists
      ansible.builtin.file:
        path: /usr/local/share/man/man5
        state: directory
        mode: "755"

    - name: Set up Alacritty's manual page
      ansible.builtin.command:
        cmd: |
          scdoc < extra/man/alacritty.1.scd | gzip -c | sudo tee /usr/local/share/man/man1/alacritty.1.gz > /dev/null
          scdoc < extra/man/alacritty-msg.1.scd | gzip -c | sudo tee /usr/local/share/man/man1/alacritty-msg.1.gz > /dev/null
          scdoc < extra/man/alacritty.5.scd | gzip -c | sudo tee /usr/local/share/man/man5/alacritty.5.gz > /dev/null
          scdoc < extra/man/alacritty-bindings.5.scd | gzip -c | sudo tee /usr/local/share/man/man5/alacritty-bindings.5.gz > /dev/null
        chdir: "{{ alacritty_dir }}"
      changed_when: true

    - name: Ensure that the `.zsh_completion` directory exists
      ansible.builtin.file:
        path: "{{ ansible_user_dir }}/.zsh_completion"
        state: directory
        mode: "755"

    - name: Copy the Alacritty completions
      ansible.builtin.copy:
        src: "{{ alacritty_dir }}/extra/completions/_alacritty"
        dest: "{{ ansible_user_dir }}/.zsh_completion/_alacritty"
        mode: "644"

- name: Ensure that the Alacritty configuration directory exists
  ansible.builtin.file:
    path: "{{ alacritty_config_dir }}"
    state: directory
    mode: "755"

- name: Ensure that the Alacritty colors directory exists
  ansible.builtin.file:
    path: "{{ alacritty_colors_dir }}"
    state: directory
    mode: "755"

- name: Get Catppuccin for Alacritty
  when: color_scheme.name == "catppuccin"
  block:
    - name: Get the `latte` flavor for Catppuccin
      ansible.builtin.get_url:
        url: https://github.com/catppuccin/alacritty/raw/main/catppuccin-latte.toml
        dest: "{{ alacritty_colors_dir }}"
        mode: "644"

    - name: Get the `frappe` flavor for Catppuccin
      ansible.builtin.get_url:
        url: https://github.com/catppuccin/alacritty/raw/main/catppuccin-frappe.toml
        dest: "{{ alacritty_colors_dir }}"
        mode: "644"

    - name: Get the `macchiato` flavor for Catppuccin
      ansible.builtin.get_url:
        url: https://github.com/catppuccin/alacritty/raw/main/catppuccin-macchiato.toml
        dest: "{{ alacritty_colors_dir }}"
        mode: "644"

    - name: Get the `mocha` flavor for Catppuccin
      ansible.builtin.get_url:
        url: https://github.com/catppuccin/alacritty/raw/main/catppuccin-mocha.toml
        dest: "{{ alacritty_colors_dir }}"
        mode: "644"

- name: Copy the script for changing the Alacritty colors
  ansible.builtin.template:
    src: "{{ alacritty_change_colors_script }}.j2"
    dest: "{{ local_bin_dir }}/{{ alacritty_change_colors_script }}"
    mode: "755"

- name: Copy the script for watching color scheme changes for Alacritty
  ansible.builtin.template:
    src: "{{ alacritty_watch_script }}.j2"
    dest: "{{ local_bin_dir }}/{{ alacritty_watch_script }}"
    mode: "755"

- name: Copy the service for watching color scheme changes for Alacritty
  ansible.builtin.template:
    src: alacrittycolors.plist.j2
    dest:
      "{{ ansible_user_dir }}/Library/LaunchAgents/{{
      alacritty_color_service_label }}.plist"
    mode: "644"

- name:
    Check if the service for watching color scheme changes for Alacritty exists
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      launchctl list | grep "{{ alacritty_color_service_label }}"
  changed_when: true
  failed_when: false
  register: alacritty_colors_launchd_list

- name: Launch the service for watching color scheme changes for Alacritty
  ansible.builtin.command:
    cmd: |
      launchctl load -w "{{ ansible_user_dir }}/Library/LaunchAgents/{{ alacritty_color_service_label }}.plist"
  when: alacritty_colors_launchd_list.rc != 0
  changed_when: true

- name: Reload the service for watching color scheme changes for Alacritty
  ansible.builtin.shell:
    cmd: |
      launchctl unload -w "{{ ansible_user_dir }}/Library/LaunchAgents/{{ alacritty_color_service_label }}.plist"
      launchctl load -w "{{ ansible_user_dir }}/Library/LaunchAgents/{{ alacritty_color_service_label }}.plist"
  when: alacritty_colors_launchd_list.rc == 0
  changed_when: true

- name: Link the Alacritty configuration
  ansible.builtin.file:
    src: "{{ dotfiles_dir }}/config/alacritty.toml"
    dest: "{{ alacritty_config_dir }}/alacritty.toml"
    state: link
    force: true
# vi: ft=yaml.ansible
