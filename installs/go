#!/bin/sh

set -e

. ../versions.sh
. ../utils/colors.sh

not_supported() {
  echo "This system is not supported: $*" >&2
  exit 1
}

install_go() {
  if [ $# -eq 0 ]; then
    echo "No arguments were passed to the Go installation function" >&2
    exit 1
  fi
  if [ -z "$1" ]; then
    echo "No version argument was passed to the Go installation function" >&2
    exit 1
  fi
  echo "Starting the installation of Go $1"
  echo "Removing old Go installation"
  go_dir="/usr/local/go"
  sudo rm -rf "${go_dir}"
  echo "Downloading Go"
  archive_name="$(curl -LsS 'https://go.dev/dl/?mode=json&include=all' | jq -r --arg "wanted_version" "go$1" --arg "os" "$(uname | tr '[:upper:]' '[:lower:]')" --arg "arch" "$(uname -m)" '.[] | select(.version == $wanted_version) | .files[] | select(.os == $os and .arch == $arch and .kind == "archive") | .filename')"
  echo "Resolved ${archive_name} as the name of the archive to install"
  tmp_file="${HOME}/tmp/${archive_name}"
  if [ -f "${tmp_file}" ]; then
    rm "${tmp_file}"
  fi
  curl -LsS "https://go.dev/dl/${archive_name}" -o "${tmp_file}"
  sudo tar -C "$(dirname "${go_dir}")" -xzf "${tmp_file}"
  rm "${tmp_file}"
}

if [ "${HAS_CONNECTION}" != "true" ]; then
  echo "Skipping the Go tasks as there is no Internet connection"
  exit 0
fi

minor_ver="$(echo "${GO_VERSION}" | head -c "$(echo "${GO_VERSION}" | grep -m 2 -ob "\." | tail -1 | grep -oE "[0-9]+")")"
wanted_ver="$(curl -LsS 'https://go.dev/dl/?mode=json&include=all' | jq -r '.[] | .version' | grep "${minor_ver}" | sort -V | tail -1 | cut -c 3-)"
# TODO: Some values of `uname -m` might need to be changed.
current_ver="$(go version | sed "s/go version //" | sed "s: $(uname | tr '[:upper:]' '[:lower:]')/$(uname -m)::" | cut -c 3-)"

echo "Found the following Go versions:"
echo "Current version: ${current_ver}"
echo "Wanted version: ${wanted_ver}"

if ! command -v go >/dev/null 2>&1; then
  install_go "${wanted_ver}"
elif [ "${wanted_ver}" != "${current_ver}" ]; then
  if [ "${DISABLE_UPDATES}" = "true" ]; then
    install_go "${wanted_ver}"
  else
    printf "%bGo update available! Current version: %s, available version: %s%b\n" "${ESC_YELLOW}" "${current_ver}" "${wanted_ver}" "${ESC_RESET}"
  fi
else
  echo "Not installing Go"
fi
