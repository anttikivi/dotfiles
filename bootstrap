#!/bin/bash

set -e

ETC_DIR="${HOME}/etc"
readonly ETC_DIR
DOTFILES_DIR="${ETC_DIR}/dotfiles"
readonly DOTFILES_DIR
HTTPS_REMOTE_URL='https://github.com/anttikivi/dotfiles.git'
readonly HTTPS_REMOTE_URL
SSH_REMOTE_URL='git@github.com:anttikivi/dotfiles.git'
readonly SSH_REMOTE_URL
PURUS_HTTPS_URL='https://github.com/anttikivi/purus.git'
readonly PURUS_HTTPS_URL
PURUS_SSH_URL='git@github.com:anttikivi/purus.git'
readonly PURUS_SSH_URL

echo "Running the dotfiles bootstrapping script!"

echo "Checking if the dotfiles repository is present at ${DOTFILES_DIR}"

first_run="false"

if [ ! -e "${DOTFILES_DIR}" ]; then
  first_run="true"
  if [ ! -d "${ETC_DIR}" ]; then
    mkdir "${ETC_DIR}"
  fi
  echo "Cloning the dotfiles repository into ${DOTFILES_DIR}"
  git clone "${HTTPS_REMOTE_URL}" "${DOTFILES_DIR}"
elif [ "$(git -C "${DOTFILES_DIR}" remote get-url origin)" != "${SSH_REMOTE_URL}" ]; then
  first_run="true"
fi

if [ "${first_run}" = "true" ]; then
  echo "This is marked as the first run"
fi

cd "${DOTFILES_DIR}"

if [ "${first_run}" = "true" ]; then
  echo "Changing the URL for the 'purus' submodule"
  git submodule set-url -- purus "${PURUS_HTTPS_URL}"
fi

echo "Running the main script"

./install

# shellcheck source=../../.bash_profile
source ~/.bash_profile

if [ "${first_run}" = "true" ]; then
  echo "As this is the first run, you need to set up the 1Password CLI"
  echo "Start by making sure that the desktop integration is set up as per the instructions in the 1Password CLI documentation:"
  echo "https://developer.1password.com/docs/cli/get-started/#step-2-turn-on-the-1password-desktop-app-integration"
  read -p "Press Enter to continue" </dev/tty
  printf "\nNow running a command to log you in to the 1Password CLI\n"
  op vault list
  echo "The 1Password CLI should now be set up!"
fi

if [ "${first_run}" = "true" ]; then
  echo "Changing the URL for the 'purus' submodule back to the original"
  git submodule set-url -- purus "${PURUS_SSH_URL}"
  echo "Updating the submodules"
  git submodule sync --recursive
  git submodule update --init --recursive
  echo "Checking the remote URL of the dotfiles repository"
  current_url="$(git remote get-url origin)"
  echo "The remote URL of the dotfiles repository is currently set to ${current_url}"

  if [ "${current_url}" != "${SSH_REMOTE_URL}" ]; then
    git remote set-url origin "${SSH_REMOTE_URL}"
  fi

  echo "The remote URLs of the dotfiles repository are now set to:"
  git remote -v
fi

cd - >/dev/null

echo "Bootstrapping complete!"

echo "You probably need to launch a new shell to properly enjoy the experience that was set up"
